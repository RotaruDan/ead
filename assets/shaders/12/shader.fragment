// http://glslsandbox.com/e#22428.1

#ifdef GL_ES
precision mediump float;
#endif

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;

float rand(float seed) {
	seed = mod(seed * 61.6, 12.38) + 5.16;
	return fract(7153.1 * sin(pow(seed, 2.)));
}

void main(void) {
	vec2 r = resolution;
	vec2 p = gl_FragCoord.xy / r;
	
	// Sky gradient
	vec3 sky = vec3(0.9, .86, .8);
	
	vec3 col = sky;
	
	// Rows of buildings
	for (int i = 16; i >= 2; i--) {
		float row = float(i);
		float which_building = p.x * (8.2 + pow(row, 1.1) * 4.) + time * 0.2 / (2. - 2./(row*row)) + 712.9 * row;
		float height = rand(floor(which_building)) * pow(0.9, row+1.) + row * 0.05 - 0.3;
		float building_x = fract(which_building);
		float building_y = (height - p.y) * row + sin(floor(which_building) + time) * 0.5;
		if (building_y > 0.) {
			// Hit building
			col = sky * pow(0.9, 23. - row);
			// Lights
			float rlight = rand(floor(which_building + building_y * 1.)); // This glitched out but I like it now.
			if (abs(building_x - 0.5) < 0.4 && fract(building_y * 4.) > 0.2)
				col += vec3(0.9 + sin(fract(which_building)), 0.9, .5+0.4*cos(row)) * pow(0.8, row) * rlight;
			
		}
	}
	
	bool b = false;
	p = 700.*gl_FragCoord.xy/resolution.x - vec2(30., 40.);
	if (distance(p, vec2(50., 50.)) < 40.) b = true;
	if (distance(p, vec2(50., 50.)) < 30.) b = false;
	if (p.x > 50. && abs(p.y - 50.) < 22.) b = false;
	if (min(abs(p.x - 110.), abs(p.x - 160.)) < 5.) b = true;
	if (abs(p.x - 160.) < 30. && p.y > 80.) b = true;
	if (abs(p.x - 210.) < 5. && p.y < 90.) b = true;
	//if (min(abs(p.y - 2. * p.x + 416.), abs(p.y + 2. * p.x - 504.)) < 9. && p.y > 42.) b = true;
	if (p.y < 10. || p.y > 90.) b = false;
	if (b) col += vec3(.77);
	
	gl_FragColor = vec4(col, 1.0);
	if (distance(p+vec2(0.), vec2(160., 150.)) < 77. && distance(p+vec2(0.), vec2(160., 50.)) > 66. && p.y > 95.) gl_FragColor.x += (.77);// all hail corporate
	
}
