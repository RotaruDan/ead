{
    "additionalProperties": false,
    "javaType": "es.eucm.ead.schema.gleaner.components.GleanerSettings",
    "type": "object",
    "description": "A one-time component that configures the gleaner tracking system. This is expected to appear on the game main entity",
    "extends": {
        "$ref": "../../components/component.json"
    },
    "properties": {
        "storage": {
            "$ref": "gleanerstorage.json",
            "description": "How data should be stored. Either locally or in the analysis server"
        },
        "flushInterval": {
            "type": "number",
            "default": 30.0,
            "description": "Determines the interval between each chunk of data is sent to storage. Default value is 30 seconds"
        },
        "screen": {
            "type": "string",
            "enum": ["auto", "manual", "disabled"],
            "default": "auto",
            "description": "Sets the policy for tracking events of type \"screen\". \n1)auto (default): Creates a screen event each time a GoScene effect is executed, using the target scene path/id as screenId.\n2)manual: screen events will only be created by using the screen effect.\n3)disabled:no screen events will be tracked"
        },
        "var": {
            "type": "string",
            "enum": ["auto", "manual", "disabled"],
            "default": "auto",
            "description": "Sets the policy for tracking events of type \"var\". \n1)auto (default option): Creates a var event each time a ChangeVar effect is executed.\n2)manual: var events will only be created by using the var effect.\n3)disabled:no var events will be tracked"
        },
        "zone": {
            "type": "string",
            "enum": ["auto", "manual", "disabled"],
            "default": "manual",
            "description": "Sets the policy for tracking events of type \"zone\" in the same way that screen events can be configured. The only difference is that by default, zone events are set up to \"manual\". This way, it is both possible to use zone and screen events indistinctly, depending on the game designer's choice"
        },
        "choice": {
            "type": "string",
            "enum": ["manual", "disabled"],
            "default": "manual",
            "description": "Sets the policy for tracking events of type \"choice\". \n1)manual (default option): choice events will only be created by using the choice effect.\n2)disabled:no choice events will be tracked"
        },
        "click": {
            "type": "string",
            "enum": ["auto", "disabled"],
            "default": "auto",
            "description": "Sets the policy for tracking events of type \"click\". \n1)auto (default option): Every time user clicks the mouse, the x,y position in game coordinates (0,0 is the bottom-left corner) is logged, followed by the name of the entity that was hit (if any, and if the entity's name is available).\n2)disabled:no click events will be tracked"
        },
        "press": {
            "type": "string",
            "enum": ["auto", "disabled"],
            "default": "auto",
            "description": "Sets the policy for tracking events of type \"press\". Works similarly to click"
        },
        "effect": {
            "type": "string",
            "enum": ["auto", "disabled"],
            "default": "disabled",
            "description": "Sets the policy for tracking the execution of effects. If activated, it will log a serialized version of any effect (in json format) that gets executed. Effects get logged only once, even if they are executed on multiple targets. This feature is disabled by default"
        }
    }
}