#This script is used to generate ninepatches in different resolutions. 
#The algorithm only works scaling up

#To use the script is necessary to have installed Inkscape and ImageMagick
#For Windows users is necessary to install the bc command manually http://www.gnu.org/software/bc/

cd 9patch 

for file in $(find . -type f -not -name .) 
	do 
		imagefile=${file:2} 
		echo "Image found: $imagefile" 
		imagename=${imagefile%.*} 
		imagepng="$imagename.png" 
		

		# Calculates the width and height of page using the .svg fields 
		widthArray=( $(grep width=\"[0-9]*\" "$imagefile") ) 
		widthPage=${widthArray[0]} 
		IFS='\"' 
		widthPageArray=($widthPage) 
		width=${widthPageArray[1]} 
		unset IFS 
		
		
		heightArray=( $(grep height=\"[0-9]*\" "$imagefile") ) 
		heightPage=${heightArray[0]} 
		IFS='\"' 
		heightPageArray=($heightPage) 
		height=${heightPageArray[1]} 
		unset IFS 
		
		#Names of temporal files
		bwImagePath=$imagename"tempBW.png" 
		bottomPath=$imagename"bottomImage.png" 
		topPath=$imagename"topImage.png" 
		leftPath=$imagename"leftImage.png" 
		rightPath=$imagename"rightImage.png" 
		centerPath=$imagename"centerImage.png" 
		
		echo "Converting $imagefile to $imagepng" 
        for folder in $(find ../ -maxdepth 1 -type d -not -name . -not -name common -not -name svg -not -name ..) 
        do 
            case $folder in 
				#the dpi variable, in this case, represents the percentage of the size respect to the original image (>= 100) to obtain the final ninepatch
                ../ldpi) dpi=100;; 
                ../mdpi) dpi=133;; 
                ../hdpi) dpi=166;; 
                ../xhdpi) dpi=200;; 
                ../xxhdpi) dpi=233;; 
                ../xxxhdpi) dpi=266;; 
                ../xxxxhdpi) dpi=333;; 
				../xxxxxhdpi) dpi=400;; 
            esac 
            echo "$folder has $dpi dpi" 
			
			#Calculates the width and height of expected image without the ninepatch (scale means the precision of floating point)
			widthWO=$( echo "scale=2; $((width))*$((dpi))/100 + 0.5" | bc ) 
			heightWO=$( echo "scale=2; $((height))*$((dpi))/100 + 0.5" | bc ) 
			
			#Calculates the width of expected image with the ninepatch
			widthF=$( echo "scale=2; $((width+2))*$((dpi))/100" | bc ) 
			
			widthWO=${widthWO/.*} 
			heightWO=${heightWO/.*} 
			widthF=${widthF/.*} 
			
			#Calculates the offset to cut the following images
			offsetXF=$( echo "scale=2; $((widthWO))/$((width))" | bc ) 
			offsetYF=$( echo "scale=2; $((heightWO))/$((height))" | bc ) 
			offsetXF=${offsetXF/.*} 
			offsetYF=${offsetYF/.*} 
			
			#Obtains the FULL IMAGE in the final size
		    inkscape --file=$imagefile --export-png=$folder/images/$imagepng --export-area-drawing --export-width=$widthF --without-gui 
			#Obtains the BLACK IMAGE (used to obtain the ninepatches with the correct black color without transparency)
			convert $folder/images/$imagepng -channel Alpha -threshold 80% -channel RGB -evaluate set 0 $folder/images/$bwImagePath 
			#Obtains the CENTER image (image without ninepatchs)
			inkscape --file=$imagefile --export-png=$folder/images/$centerPath --export-area-page --export-width=$widthWO --without-gui 
			#Obtains the TOP ninepatch 
			convert $folder/images/$bwImagePath -define png:color-type=6 -crop "$((widthWO))x1+$((offsetXF))+0" +repage $folder/images/$topPath 
			#Obtains the BOTTOM ninepatch
			convert $folder/images/$bwImagePath -gravity SouthWest -define png:color-type=6 -crop "$((widthWO))x1+$((offsetXF))+0" +repage $folder/images/$bottomPath 
			#Obtains the LEFT ninepatch
			convert $folder/images/$bwImagePath -gravity NorthWest -define png:color-type=6 -crop "1x$((heightWO))+0+$((offsetYF))" +repage $folder/images/$leftPath  
			#Obtains the RIGHT ninepatch
			convert $folder/images/$bwImagePath -gravity NorthEast -define png:color-type=6 -crop "1x$((heightWO))+0+$((offsetYF))" +repage $folder/images/$rightPath 
			#Creates the FINAL IMAGE (with correct ninepatches) using the last five images
			convert -background None $folder/images/$topPath \( $folder/images/$leftPath $folder/images/$centerPath $folder/images/$rightPath +append \) $folder/images/$bottomPath -gravity North -append -define png:color-type=6 "$folder/images/$imagename.9.png" 
			
			#Removes the temporal images used to obtain the final ninepatch
			rm $folder/images/$bwImagePath 
			rm $folder/images/$centerPath 
			rm $folder/images/$topPath 
			rm $folder/images/$bottomPath 
			rm $folder/images/$leftPath 
			rm $folder/images/$rightPath 
			rm $folder/images/$imagepng 
			
		done 
	done